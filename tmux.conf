# 设置前缀为C-q, 取消默认前缀
set -g prefix C-q
unbind C-b
bind-key C-q send-prefix

# 配置项
# ============================================================
# 使用zsh
# 需要使用zsh全路径
set-option -g default-shell "/usr/bin/zsh"
# mac下需要 brew install reattach-to-user-namespace
#set-option -g default-command "reattach-to-user-namespace -l zsh"
# window 初始编号
set-option -g base-index 1
set-option -g pane-base-index 1
# 提示信息持续时间
set-option -g display-time 5000
# 设置键盘布局
set-option -g status-keys vi
# status-bar time display
set-option -g status-right "#(date +%H:%M' ')"
# to work with neovim
set-option -sg escape-time 10

# window utf-8 support
# set-window-option -g utf8 on
# copy-mode key-map
set-window-option -g mode-keys vi
# not rename window after commands
set-option -g automatic-rename off
set-option -g allow-rename off


# shortcut key define
# ===============================================================

bind-key z kill-session
bind-key h select-layout even-horizontal
bind-key v select-layout even-vertical
# select panel
bind-key -r -T prefix C-h select-pane -R
bind-key -r -T prefix C-j select-pane -D
bind-key -r -T prefix C-k select-pane -U
bind-key -r -T prefix C-l select-pane -L

## new window and pane with current dir
# panes
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
bind-key @ command-prompt -p "create pane from:" "join-pane -s ':%%'"
# windows
bind-key c new-window -c "#{pane_current_path}" -n "new-window"
# tab short-key
bind-key -n C-t new-window -a -c "#{pane_current_path}"
bind-key -n M-n prev
bind-key -n M-m next
#bind-key -n C-S-left -t -1
#bind-key -n C-S-right -t +1

# copy and paste
bind P paste-buffer
# alllow mouse copy
#set -g mouse on
#for tmux(versin >= 2.4)
#bind-key -T copy-mode-vi v send-keys -X begin-selection
#bind-key -T copy-mode-vi y send-keys -X copy-selection
#bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# for tmux (versoin < 2.4)
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'r' rectangle-toggle
# the tmux default copy to tmux buffer.
# bind key to copy to system clipboard
# on linux(apt install xclip)
# XXX this not work, use yank-plugin now
#bind -t vi-copy y copy-pipe "xclip -selection clipboard -i"

# auto layout
#bind S source-file ~/.tmux/remote
#bind s source-file ~/.tmux/vim

## nested tmux config
# XXX this not work now. seems like version problem
#bind -T root F12  \
#  set prefix None \;\
#  set key-table off \;\
#  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
#  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
#  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
#  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
#  refresh-client -S \;\


#bind -T off F12 \
#  set -u prefix \;\
#  set -u key-table \;\
#  set -u status-style \;\
#  set -u window-status-current-style \;\
#  set -u window-status-current-format \;\
#  refresh-client -S
  
#wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

#set -g status-right "$wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host"


### add tmux plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
# tmux yank
set -g @plugin 'tmux-plugins/tmux-yank'
# tmux copycat(search)
set -g @plugin 'tmux-plugins/tmux-copycat'
# tmux open(o/c-o/Shift-o)
set -g @plugin 'tmux-plugins/tmux-open'
# tmux continuous saving
set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @continuum-restore 'on'

run '~/.tmux/plugins/tpm/tpm'

